#SSL Certificate on CentOS Running Apache
##system on the public Internet with a valid DNS A or CNAME record. An A record maps domain name to the IP address of the device hosting that domain, i.e., the A record for demo.linux.com is
104.236.177.6. A CNAME, which stands for Canonical Name, an alias for another domain, i.e., courses.linux.com   CNAME  points to www.linux.com. 
## The DNS name of www.linux.com, in turn, has an A Record of 104.336.177.6.

su -

#Apache HTTP Server. You'll also need to install "mod_ssl" to add SSL
support to Apache.
yum install -y httpd mod_ssl

systemctl start httpd
systemctl enable httpd

systemctl status httpd

#is-active option to systemctl .
systemctl is-active httpd

echo demo > /var/www/html/index.html


#with local Linux firewall, run the following commands to allow HTTP and HTTPS

firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --permanent --zone=public --add-service=https
firewall-cmd --reload

#Connect to  server with a DNS record associated with the server.

Open up a web browser and connect to  server. Remember, that you should have a DNS record associated with  server.

curl http://demo.linux.com
curl https://demo.linux.com
#Curl will also generate an error due to the self-signed SSL certificate. 
#use the -k option to force curl to ignore the invalid SSL cert.
curl -k https://demo.linux.com

#Certbot application to generate an SSL certificate.
#It's not part of the base Linux distribution, but it is available in the EPEL repository. -Extra Packages for Enterprise Linux - a Fedora project that builds and maintains quality 3rd party packages for RHEL based distributions such as CentOS.  

#EPEL repository..

yum install -y epel-release

#Certbot application.
yum install -y certbot
yum search certbot 
yum info certbot

#Install the Apache Certbot Plugin
The Certbot application has a few different plugins that allow it to automatically update the configuration for the web server you are using. Since we are using Apache, we'll install the Apache
Certbot plugin.

yum install -y python2-certbot-apache
#  If  using NGINX  install the NGINX plugin which is provided by  python2-certbot-nginx package.)
#Request an SSL Certificate from Let's Encrypt

#To request the initial SSL Certificate execute the certbot command.
#without any options and you will be prompted for all of the required information. 
#Because we already know that we're using the Apache web server we can specify that on the command line with the " --apache " option. 
# specify domain with the " -d " option followed by name of domain. i.e. thomasmaestas.net

certbot --apache -d demo.linux.com

#If you want to force all traffic to HTTPS, be sure to choose the "Secure" HTTPS access option when prompted. 
#If you want to allow both HTTP and HTTPS traffic, choose the "Easy" option. 
#On the following page is an example execution of the Certbot application including the output it generated. 
#The characters in bold were typed in as input.